
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  avatarUrl: 'avatarUrl',
  phone: 'phone',
  locale: 'locale',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  role: 'role',
  roles: 'roles'
};

exports.Prisma.ClientScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  archivedAt: 'archivedAt'
};

exports.Prisma.VendorScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  businessName: 'businessName',
  businessDescription: 'businessDescription',
  businessType: 'businessType',
  phoneNumber: 'phoneNumber',
  businessEmail: 'businessEmail',
  businessAddress: 'businessAddress',
  taxId: 'taxId',
  businessRegNumber: 'businessRegNumber',
  bankAccountNumber: 'bankAccountNumber',
  bankRoutingNumber: 'bankRoutingNumber',
  bankAccountHolderName: 'bankAccountHolderName',
  status: 'status',
  approvedAt: 'approvedAt',
  approvedBy: 'approvedBy',
  rejectedAt: 'rejectedAt',
  rejectedBy: 'rejectedBy',
  rejectionReason: 'rejectionReason',
  rejectionCategory: 'rejectionCategory',
  suspendedAt: 'suspendedAt',
  suspensionReason: 'suspensionReason',
  reinstatedAt: 'reinstatedAt',
  reinstatedBy: 'reinstatedBy',
  documents: 'documents',
  documentsComplete: 'documentsComplete',
  yearsInBusiness: 'yearsInBusiness',
  estimatedMonthlyVolume: 'estimatedMonthlyVolume',
  productCategories: 'productCategories',
  tier: 'tier',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.StoreScalarFieldEnum = {
  id: 'id',
  sellerId: 'sellerId',
  name: 'name',
  slug: 'slug',
  email: 'email',
  phone: 'phone',
  address: 'address',
  socials: 'socials',
  seo: 'seo',
  logo: 'logo',
  banner: 'banner',
  description: 'description',
  status: 'status',
  approvedAt: 'approvedAt',
  approvedBy: 'approvedBy',
  rejectedAt: 'rejectedAt',
  rejectionReason: 'rejectionReason',
  suspendedAt: 'suspendedAt',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  storeId: 'storeId',
  title: 'title',
  description: 'description',
  brand: 'brand',
  category: 'category',
  condition: 'condition',
  status: 'status',
  price: 'price',
  compareAtPrice: 'compareAtPrice',
  sku: 'sku',
  barcode: 'barcode',
  images: 'images',
  tags: 'tags',
  seoData: 'seoData',
  variants: 'variants',
  inventory: 'inventory',
  views: 'views',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  clientId: 'clientId',
  productId: 'productId',
  offerId: 'offerId',
  quantity: 'quantity',
  price: 'price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuctionScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  storeId: 'storeId',
  title: 'title',
  description: 'description',
  images: 'images',
  category: 'category',
  minIncrement: 'minIncrement',
  currentBid: 'currentBid',
  startPrice: 'startPrice',
  reservePrice: 'reservePrice',
  reserveMet: 'reserveMet',
  buyNowPrice: 'buyNowPrice',
  startAt: 'startAt',
  endAt: 'endAt',
  duration: 'duration',
  autoExtend: 'autoExtend',
  extendMinutes: 'extendMinutes',
  extensionCount: 'extensionCount',
  lastExtendedAt: 'lastExtendedAt',
  views: 'views',
  watchers: 'watchers',
  status: 'status',
  winnerId: 'winnerId',
  winningBidId: 'winningBidId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BidScalarFieldEnum = {
  id: 'id',
  auctionId: 'auctionId',
  clientId: 'clientId',
  amount: 'amount',
  maxAmount: 'maxAmount',
  isAuto: 'isAuto',
  isProxyBid: 'isProxyBid',
  proxyGeneratedBy: 'proxyGeneratedBy',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.OfferScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  price: 'price',
  promoPct: 'promoPct',
  active: 'active'
};

exports.Prisma.OrderRequestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  storeId: 'storeId',
  source: 'source',
  status: 'status',
  expressAt: 'expressAt',
  address: 'address',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  storeId: 'storeId',
  number: 'number',
  total: 'total',
  status: 'status',
  fulfillStatus: 'fulfillStatus',
  shipping: 'shipping',
  timeline: 'timeline',
  createdAt: 'createdAt'
};

exports.Prisma.MessageThreadScalarFieldEnum = {
  id: 'id',
  type: 'type',
  subject: 'subject',
  status: 'status',
  priority: 'priority',
  category: 'category',
  lastMessageAt: 'lastMessageAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  vendorId: 'vendorId',
  productId: 'productId',
  orderId: 'orderId'
};

exports.Prisma.MessageThreadParticipantScalarFieldEnum = {
  id: 'id',
  threadId: 'threadId',
  userId: 'userId',
  role: 'role',
  joinedAt: 'joinedAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  threadId: 'threadId',
  senderId: 'senderId',
  content: 'content',
  isRead: 'isRead',
  readAt: 'readAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MessageAttachmentScalarFieldEnum = {
  id: 'id',
  messageId: 'messageId',
  filename: 'filename',
  originalName: 'originalName',
  url: 'url',
  size: 'size',
  mimeType: 'mimeType',
  uploadedById: 'uploadedById',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  body: 'body',
  payload: 'payload',
  createdAt: 'createdAt',
  readAt: 'readAt'
};

exports.Prisma.WatchlistItemScalarFieldEnum = {
  id: 'id',
  clientId: 'clientId',
  productId: 'productId',
  createdAt: 'createdAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  clientId: 'clientId',
  rating: 'rating',
  body: 'body',
  photos: 'photos',
  verified: 'verified',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.AbuseReportScalarFieldEnum = {
  id: 'id',
  reporterId: 'reporterId',
  targetType: 'targetType',
  targetId: 'targetId',
  reason: 'reason',
  details: 'details',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  actorId: 'actorId',
  action: 'action',
  entity: 'entity',
  entityId: 'entityId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  metadata: 'metadata',
  diff: 'diff',
  vendorId: 'vendorId',
  createdAt: 'createdAt'
};

exports.Prisma.PlatformSettingsScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  category: 'category',
  updatedBy: 'updatedBy',
  updatedAt: 'updatedAt',
  createdAt: 'createdAt'
};

exports.Prisma.ArchiveFileScalarFieldEnum = {
  id: 'id',
  ownerId: 'ownerId',
  fileName: 'fileName',
  fileType: 'fileType',
  size: 'size',
  path: 'path',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.BannerScalarFieldEnum = {
  id: 'id',
  slot: 'slot',
  content: 'content'
};

exports.Prisma.SavedSearchScalarFieldEnum = {
  id: 'id',
  clientId: 'clientId',
  query: 'query',
  createdAt: 'createdAt'
};

exports.Prisma.VendorSettingsScalarFieldEnum = {
  id: 'id',
  vendorId: 'vendorId',
  storeSettings: 'storeSettings',
  accountSettings: 'accountSettings',
  notificationSettings: 'notificationSettings',
  securitySettings: 'securitySettings',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuctionActivityScalarFieldEnum = {
  id: 'id',
  auctionId: 'auctionId',
  activityType: 'activityType',
  userId: 'userId',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.AuctionViewScalarFieldEnum = {
  id: 'id',
  auctionId: 'auctionId',
  userId: 'userId',
  ipAddress: 'ipAddress',
  createdAt: 'createdAt'
};

exports.Prisma.AuctionWatcherScalarFieldEnum = {
  id: 'id',
  auctionId: 'auctionId',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.ProductImageScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  url: 'url',
  altText: 'altText',
  order: 'order',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  email: 'email',
  name: 'name',
  password: 'password',
  avatarUrl: 'avatarUrl',
  phone: 'phone',
  locale: 'locale'
};

exports.Prisma.VendorOrderByRelevanceFieldEnum = {
  businessName: 'businessName',
  businessDescription: 'businessDescription',
  businessType: 'businessType',
  phoneNumber: 'phoneNumber',
  businessEmail: 'businessEmail',
  taxId: 'taxId',
  businessRegNumber: 'businessRegNumber',
  bankAccountNumber: 'bankAccountNumber',
  bankRoutingNumber: 'bankRoutingNumber',
  bankAccountHolderName: 'bankAccountHolderName',
  rejectionReason: 'rejectionReason',
  rejectionCategory: 'rejectionCategory',
  suspensionReason: 'suspensionReason',
  estimatedMonthlyVolume: 'estimatedMonthlyVolume',
  tier: 'tier'
};

exports.Prisma.StoreOrderByRelevanceFieldEnum = {
  name: 'name',
  slug: 'slug',
  email: 'email',
  phone: 'phone',
  logo: 'logo',
  banner: 'banner',
  description: 'description',
  rejectionReason: 'rejectionReason'
};

exports.Prisma.ProductOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  brand: 'brand',
  category: 'category',
  sku: 'sku',
  barcode: 'barcode'
};

exports.Prisma.AuctionOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  category: 'category'
};

exports.Prisma.OrderRequestOrderByRelevanceFieldEnum = {
  notes: 'notes'
};

exports.Prisma.OrderOrderByRelevanceFieldEnum = {
  number: 'number'
};

exports.Prisma.MessageThreadOrderByRelevanceFieldEnum = {
  id: 'id',
  subject: 'subject'
};

exports.Prisma.MessageThreadParticipantOrderByRelevanceFieldEnum = {
  id: 'id',
  threadId: 'threadId'
};

exports.Prisma.MessageOrderByRelevanceFieldEnum = {
  id: 'id',
  threadId: 'threadId',
  content: 'content'
};

exports.Prisma.MessageAttachmentOrderByRelevanceFieldEnum = {
  id: 'id',
  messageId: 'messageId',
  filename: 'filename',
  originalName: 'originalName',
  url: 'url',
  mimeType: 'mimeType'
};

exports.Prisma.NotificationOrderByRelevanceFieldEnum = {
  title: 'title',
  body: 'body'
};

exports.Prisma.ReviewOrderByRelevanceFieldEnum = {
  body: 'body'
};

exports.Prisma.AbuseReportOrderByRelevanceFieldEnum = {
  targetType: 'targetType',
  reason: 'reason',
  details: 'details'
};

exports.Prisma.AuditLogOrderByRelevanceFieldEnum = {
  action: 'action',
  entity: 'entity',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent'
};

exports.Prisma.PlatformSettingsOrderByRelevanceFieldEnum = {
  key: 'key',
  category: 'category'
};

exports.Prisma.ArchiveFileOrderByRelevanceFieldEnum = {
  fileName: 'fileName',
  fileType: 'fileType',
  path: 'path'
};

exports.Prisma.BannerOrderByRelevanceFieldEnum = {
  slot: 'slot'
};

exports.Prisma.AuctionActivityOrderByRelevanceFieldEnum = {
  activityType: 'activityType'
};

exports.Prisma.AuctionViewOrderByRelevanceFieldEnum = {
  ipAddress: 'ipAddress'
};

exports.Prisma.ProductImageOrderByRelevanceFieldEnum = {
  url: 'url',
  altText: 'altText'
};
exports.Role = exports.$Enums.Role = {
  CLIENT: 'CLIENT',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN'
};

exports.VendorStatus = exports.$Enums.VendorStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  SUSPENDED: 'SUSPENDED',
  EXPIRED: 'EXPIRED'
};

exports.StoreStatus = exports.$Enums.StoreStatus = {
  PENDING: 'PENDING',
  ACTIVE: 'ACTIVE',
  SUSPENDED: 'SUSPENDED',
  REJECTED: 'REJECTED',
  DELETED: 'DELETED'
};

exports.ProductCondition = exports.$Enums.ProductCondition = {
  NEW: 'NEW',
  USED: 'USED'
};

exports.ProductStatus = exports.$Enums.ProductStatus = {
  DRAFT: 'DRAFT',
  ACTIVE: 'ACTIVE',
  ARCHIVED: 'ARCHIVED'
};

exports.AuctionStatus = exports.$Enums.AuctionStatus = {
  DRAFT: 'DRAFT',
  SCHEDULED: 'SCHEDULED',
  ACTIVE: 'ACTIVE',
  RUNNING: 'RUNNING',
  ENDING_SOON: 'ENDING_SOON',
  ENDED: 'ENDED',
  CANCELLED: 'CANCELLED',
  ARCHIVED: 'ARCHIVED'
};

exports.BidStatus = exports.$Enums.BidStatus = {
  ACTIVE: 'ACTIVE',
  OUTBID: 'OUTBID',
  WINNING: 'WINNING',
  WON: 'WON',
  LOST: 'LOST'
};

exports.OrderSource = exports.$Enums.OrderSource = {
  BUY_NOW: 'BUY_NOW',
  AUCTION_CLAIM: 'AUCTION_CLAIM'
};

exports.OrderRequestStatus = exports.$Enums.OrderRequestStatus = {
  REQUESTED: 'REQUESTED',
  SELLER_ACCEPTED: 'SELLER_ACCEPTED',
  SELLER_REFUSED: 'SELLER_REFUSED',
  EXPIRED: 'EXPIRED',
  CONVERTED: 'CONVERTED'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  CONFIRMED: 'CONFIRMED',
  REFUSED: 'REFUSED',
  CANCELED_AFTER_CONFIRM: 'CANCELED_AFTER_CONFIRM'
};

exports.FulfillStatus = exports.$Enums.FulfillStatus = {
  PENDING: 'PENDING',
  PREPARING: 'PREPARING',
  READY_FOR_PICKUP: 'READY_FOR_PICKUP',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELED: 'CANCELED'
};

exports.ThreadType = exports.$Enums.ThreadType = {
  SUPPORT_TICKET: 'SUPPORT_TICKET',
  VENDOR_CHAT: 'VENDOR_CHAT'
};

exports.ThreadStatus = exports.$Enums.ThreadStatus = {
  OPEN: 'OPEN',
  IN_PROGRESS: 'IN_PROGRESS',
  RESOLVED: 'RESOLVED',
  CLOSED: 'CLOSED'
};

exports.ThreadPriority = exports.$Enums.ThreadPriority = {
  LOW: 'LOW',
  NORMAL: 'NORMAL',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.ThreadCategory = exports.$Enums.ThreadCategory = {
  ORDER: 'ORDER',
  PRODUCT: 'PRODUCT',
  TECHNICAL: 'TECHNICAL',
  OTHER: 'OTHER'
};

exports.ParticipantRole = exports.$Enums.ParticipantRole = {
  USER: 'USER',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  ORDER: 'ORDER',
  AUCTION: 'AUCTION',
  MESSAGE: 'MESSAGE',
  SYSTEM: 'SYSTEM'
};

exports.ReviewStatus = exports.$Enums.ReviewStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.AbuseStatus = exports.$Enums.AbuseStatus = {
  OPEN: 'OPEN',
  REVIEWING: 'REVIEWING',
  RESOLVED: 'RESOLVED',
  REJECTED: 'REJECTED'
};

exports.ArchiveStatus = exports.$Enums.ArchiveStatus = {
  ACTIVE: 'ACTIVE',
  ARCHIVED: 'ARCHIVED',
  DELETED: 'DELETED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Client: 'Client',
  Vendor: 'Vendor',
  Admin: 'Admin',
  Store: 'Store',
  Product: 'Product',
  CartItem: 'CartItem',
  Auction: 'Auction',
  Bid: 'Bid',
  Offer: 'Offer',
  OrderRequest: 'OrderRequest',
  Order: 'Order',
  MessageThread: 'MessageThread',
  MessageThreadParticipant: 'MessageThreadParticipant',
  Message: 'Message',
  MessageAttachment: 'MessageAttachment',
  Notification: 'Notification',
  WatchlistItem: 'WatchlistItem',
  Review: 'Review',
  AbuseReport: 'AbuseReport',
  AuditLog: 'AuditLog',
  PlatformSettings: 'PlatformSettings',
  ArchiveFile: 'ArchiveFile',
  Banner: 'Banner',
  SavedSearch: 'SavedSearch',
  VendorSettings: 'VendorSettings',
  AuctionActivity: 'AuctionActivity',
  AuctionView: 'AuctionView',
  AuctionWatcher: 'AuctionWatcher',
  ProductImage: 'ProductImage'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\HP OMEN 16\\bidinsouk\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\HP OMEN 16\\bidinsouk\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Prisma schema for MySQL mapping the marketplace with auctions, bids, orders,\n// messaging, notifications, watchlists, reviews, abuse reports, audit logs\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Users and Roles\nmodel User {\n  id        BigInt   @id @default(autoincrement()) @db.BigInt\n  email     String   @unique\n  name      String\n  password  String\n  avatarUrl String?  @db.VarChar(512)\n  phone     String?  @db.VarChar(32)\n  locale    String?  @default(\"fr\")\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  role   Role    @default(CLIENT) // Primary role (backward compatibility)\n  roles  Json? // Array of roles [\"CLIENT\", \"VENDOR\"] for dual capabilities\n  client Client?\n  vendor Vendor?\n  admin  Admin?\n\n  notifications       Notification[]\n  messages            Message[]                  @relation(\"UserMessages\")\n  threadParticipants  MessageThreadParticipant[] @relation(\"ThreadParticipants\")\n  uploadedAttachments MessageAttachment[]        @relation(\"UploadedAttachments\")\n  abuseReports        AbuseReport[]              @relation(\"Reporter\")\n  auditLogs           AuditLog[]                 @relation(\"Actor\")\n  archiveFiles        ArchiveFile[]\n  watchedAuctions     AuctionWatcher[]           @relation(\"WatchedAuctions\")\n}\n\nenum Role {\n  CLIENT\n  VENDOR\n  ADMIN\n}\n\n// Client profile\nmodel Client {\n  id         BigInt    @id @default(autoincrement()) @db.BigInt\n  user       User      @relation(fields: [userId], references: [id])\n  userId     BigInt    @unique @db.BigInt\n  archivedAt DateTime? // Track if this client profile was archived during vendor upgrade\n\n  reviews       Review[]\n  watchlist     WatchlistItem[]\n  savedSearch   SavedSearch[]\n  orders        Order[]\n  bids          Bid[]\n  orderRequests OrderRequest[]\n  wonAuctions   Auction[]       @relation(\"AuctionWinner\")\n  cartItems     CartItem[]\n}\n\n// Vendor profile\nmodel Vendor {\n  id     BigInt @id @default(autoincrement()) @db.BigInt\n  user   User   @relation(fields: [userId], references: [id])\n  userId BigInt @unique @db.BigInt\n\n  // Business Information\n  businessName        String? @db.VarChar(255)\n  businessDescription String? @db.Text\n  businessType        String? @db.VarChar(50) // INDIVIDUAL, COMPANY, PARTNERSHIP\n\n  // Contact Information\n  phoneNumber     String? @db.VarChar(32)\n  businessEmail   String? @db.VarChar(255)\n  businessAddress Json?\n\n  // Legal Information\n  taxId             String? @db.VarChar(100)\n  businessRegNumber String? @db.VarChar(100)\n\n  // Banking (Encrypted)\n  bankAccountNumber     String? @db.VarChar(512)\n  bankRoutingNumber     String? @db.VarChar(512)\n  bankAccountHolderName String? @db.VarChar(255)\n\n  // Status Management\n  status VendorStatus @default(PENDING)\n\n  // Approval/Rejection\n  approvedAt        DateTime?\n  approvedBy        BigInt?   @db.BigInt\n  rejectedAt        DateTime?\n  rejectedBy        BigInt?   @db.BigInt\n  rejectionReason   String?   @db.Text\n  rejectionCategory String?   @db.VarChar(50)\n\n  // Suspension\n  suspendedAt      DateTime?\n  suspensionReason String?   @db.Text\n  reinstatedAt     DateTime?\n  reinstatedBy     BigInt?   @db.BigInt\n\n  // Documents\n  documents         Json? // URLs to uploaded documents\n  documentsComplete Boolean @default(false)\n\n  // Additional Info\n  yearsInBusiness        Int?\n  estimatedMonthlyVolume String? @db.VarChar(50)\n  productCategories      Json?\n\n  // Metadata\n  tier      String   @default(\"BASIC\") @db.VarChar(50) // BASIC, PREMIUM\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  stores         Store[]\n  auditLogs      AuditLog[]      @relation(\"VendorAudit\")\n  messageThreads MessageThread[]\n  settings       VendorSettings?\n\n  @@index([status])\n  @@index([businessName])\n}\n\nenum VendorStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  SUSPENDED\n  EXPIRED\n}\n\n// Admin profile\nmodel Admin {\n  id     BigInt @id @default(autoincrement()) @db.BigInt\n  user   User   @relation(fields: [userId], references: [id])\n  userId BigInt @unique @db.BigInt\n}\n\nmodel Store {\n  id          BigInt      @id @default(autoincrement()) @db.BigInt\n  seller      Vendor      @relation(fields: [sellerId], references: [id])\n  sellerId    BigInt      @db.BigInt\n  name        String\n  slug        String      @unique\n  email       String\n  phone       String?\n  address     Json?\n  socials     Json?\n  seo         Json?\n  logo        String?     @db.VarChar(512)\n  banner      String?     @db.VarChar(512)\n  description String?     @db.Text\n  status      StoreStatus @default(PENDING)\n\n  // Approval tracking\n  approvedAt      DateTime?\n  approvedBy      BigInt?   @db.BigInt\n  rejectedAt      DateTime?\n  rejectionReason String?   @db.Text\n  suspendedAt     DateTime?\n  deletedAt       DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  products      Product[]\n  auctions      Auction[]\n  orders        Order[]\n  orderRequests OrderRequest[]\n\n  @@index([sellerId])\n  @@index([status])\n}\n\nenum StoreStatus {\n  PENDING\n  ACTIVE\n  SUSPENDED\n  REJECTED\n  DELETED\n}\n\nmodel Product {\n  id             BigInt           @id @default(autoincrement()) @db.BigInt\n  store          Store            @relation(fields: [storeId], references: [id])\n  storeId        BigInt           @db.BigInt\n  title          String\n  description    String?          @db.Text\n  brand          String?\n  category       String?\n  condition      ProductCondition @default(USED)\n  status         ProductStatus    @default(DRAFT)\n  price          Decimal?         @db.Decimal(12, 2)\n  compareAtPrice Decimal?         @db.Decimal(12, 2)\n  sku            String?\n  barcode        String?\n  images         Json?\n  tags           Json?\n  seoData        Json?\n  variants       Json?\n  inventory      Json?\n  views          Int              @default(0)\n  createdAt      DateTime         @default(now())\n  updatedAt      DateTime         @updatedAt\n\n  auctions       Auction[]\n  offers         Offer[]\n  reviews        Review[]\n  watchlistItems WatchlistItem[]\n  messageThreads MessageThread[]\n  productImages  ProductImage[]\n  cartItems      CartItem[]\n}\n\nmodel CartItem {\n  id        BigInt   @id @default(autoincrement()) @db.BigInt\n  client    Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)\n  clientId  BigInt   @db.BigInt\n  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)\n  productId BigInt   @db.BigInt\n  offer     Offer?   @relation(fields: [offerId], references: [id], onDelete: SetNull)\n  offerId   BigInt?  @db.BigInt\n  quantity  Int      @default(1)\n  price     Decimal  @db.Decimal(12, 2)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([clientId, productId, offerId])\n  @@index([clientId])\n  @@index([productId])\n}\n\nenum ProductCondition {\n  NEW\n  USED\n}\n\nenum ProductStatus {\n  DRAFT\n  ACTIVE\n  ARCHIVED\n}\n\nmodel Auction {\n  id             BigInt        @id @default(autoincrement()) @db.BigInt\n  product        Product?      @relation(fields: [productId], references: [id])\n  productId      BigInt?       @db.BigInt\n  store          Store         @relation(fields: [storeId], references: [id])\n  storeId        BigInt        @db.BigInt\n  title          String\n  description    String?       @db.Text\n  images         Json?\n  category       String?\n  minIncrement   Decimal       @db.Decimal(12, 2)\n  currentBid     Decimal       @default(0) @db.Decimal(12, 2)\n  startPrice     Decimal       @db.Decimal(12, 2)\n  reservePrice   Decimal?      @db.Decimal(12, 2)\n  reserveMet     Boolean       @default(false)\n  buyNowPrice    Decimal?      @db.Decimal(12, 2)\n  startAt        DateTime      @default(now())\n  endAt          DateTime\n  duration       Int? // hours\n  autoExtend     Boolean       @default(false)\n  extendMinutes  Int           @default(5)\n  extensionCount Int           @default(0)\n  lastExtendedAt DateTime?\n  views          Int           @default(0)\n  watchers       Int           @default(0)\n  status         AuctionStatus @default(SCHEDULED)\n  winnerId       BigInt?       @db.BigInt\n  winner         Client?       @relation(\"AuctionWinner\", fields: [winnerId], references: [id])\n  winningBidId   BigInt?       @db.BigInt\n  createdAt      DateTime      @default(now())\n  updatedAt      DateTime      @updatedAt\n\n  bids            Bid[]\n  activities      AuctionActivity[]\n  auctionViews    AuctionView[]\n  auctionWatchers AuctionWatcher[]\n\n  @@index([status, endAt])\n  @@index([winnerId])\n}\n\nenum AuctionStatus {\n  DRAFT\n  SCHEDULED\n  ACTIVE\n  RUNNING\n  ENDING_SOON\n  ENDED\n  CANCELLED\n  ARCHIVED\n}\n\nmodel Bid {\n  id               BigInt    @id @default(autoincrement()) @db.BigInt\n  auction          Auction   @relation(fields: [auctionId], references: [id])\n  auctionId        BigInt    @db.BigInt\n  client           Client    @relation(fields: [clientId], references: [id])\n  clientId         BigInt    @db.BigInt\n  amount           Decimal   @db.Decimal(12, 2)\n  maxAmount        Decimal?  @db.Decimal(12, 2) // For proxy bidding\n  isAuto           Boolean   @default(false)\n  isProxyBid       Boolean   @default(false) // True if auto-generated by proxy system\n  proxyGeneratedBy BigInt?   @db.BigInt // Original bid that triggered this\n  status           BidStatus @default(ACTIVE)\n  createdAt        DateTime  @default(now())\n\n  @@index([auctionId, amount(sort: Desc)])\n  @@index([clientId, status])\n  @@index([maxAmount])\n}\n\nenum BidStatus {\n  ACTIVE // Bid is still in play\n  OUTBID // Bid was beaten by another bidder\n  WINNING // Currently winning the auction\n  WON // Won the auction (auction ended)\n  LOST // Lost the auction (auction ended)\n}\n\nmodel Offer {\n  id        BigInt     @id @default(autoincrement()) @db.BigInt\n  product   Product    @relation(fields: [productId], references: [id])\n  productId BigInt     @db.BigInt\n  price     Decimal    @db.Decimal(12, 2)\n  promoPct  Int?\n  active    Boolean    @default(true)\n  cartItems CartItem[]\n}\n\nmodel OrderRequest {\n  id        BigInt             @id @default(autoincrement()) @db.BigInt\n  user      Client             @relation(fields: [userId], references: [id])\n  userId    BigInt             @db.BigInt\n  store     Store              @relation(fields: [storeId], references: [id])\n  storeId   BigInt             @db.BigInt\n  source    OrderSource\n  status    OrderRequestStatus @default(REQUESTED)\n  expressAt DateTime?\n  address   Json?\n  notes     String?\n  createdAt DateTime           @default(now())\n}\n\nenum OrderSource {\n  BUY_NOW\n  AUCTION_CLAIM\n}\n\nenum OrderRequestStatus {\n  REQUESTED\n  SELLER_ACCEPTED\n  SELLER_REFUSED\n  EXPIRED\n  CONVERTED\n}\n\nmodel Order {\n  id            BigInt        @id @default(autoincrement()) @db.BigInt\n  user          Client        @relation(fields: [userId], references: [id])\n  userId        BigInt        @db.BigInt\n  store         Store         @relation(fields: [storeId], references: [id])\n  storeId       BigInt        @db.BigInt\n  number        String        @unique\n  total         Decimal       @db.Decimal(12, 2)\n  status        OrderStatus   @default(CONFIRMED)\n  fulfillStatus FulfillStatus @default(PENDING)\n  shipping      Json?\n  timeline      Json?\n  createdAt     DateTime      @default(now())\n\n  messageThreads MessageThread[]\n}\n\nenum OrderStatus {\n  CONFIRMED\n  REFUSED\n  CANCELED_AFTER_CONFIRM\n}\n\nenum FulfillStatus {\n  PENDING\n  PREPARING\n  READY_FOR_PICKUP\n  SHIPPED\n  DELIVERED\n  CANCELED\n}\n\nmodel MessageThread {\n  id            String          @id @default(cuid())\n  type          ThreadType\n  subject       String\n  status        ThreadStatus    @default(OPEN)\n  priority      ThreadPriority  @default(NORMAL)\n  category      ThreadCategory?\n  lastMessageAt DateTime        @default(now())\n  createdAt     DateTime        @default(now())\n  updatedAt     DateTime        @updatedAt\n\n  // Relations\n  vendorId  BigInt?\n  vendor    Vendor?  @relation(fields: [vendorId], references: [id])\n  productId BigInt?\n  product   Product? @relation(fields: [productId], references: [id])\n  orderId   BigInt?\n  order     Order?   @relation(fields: [orderId], references: [id])\n\n  messages     Message[]\n  participants MessageThreadParticipant[]\n}\n\nenum ThreadType {\n  SUPPORT_TICKET\n  VENDOR_CHAT\n}\n\nenum ThreadStatus {\n  OPEN\n  IN_PROGRESS\n  RESOLVED\n  CLOSED\n}\n\nenum ThreadPriority {\n  LOW\n  NORMAL\n  HIGH\n  URGENT\n}\n\nenum ThreadCategory {\n  ORDER\n  PRODUCT\n  TECHNICAL\n  OTHER\n}\n\nmodel MessageThreadParticipant {\n  id       String          @id @default(cuid())\n  threadId String\n  thread   MessageThread   @relation(fields: [threadId], references: [id], onDelete: Cascade)\n  userId   BigInt          @db.BigInt\n  user     User            @relation(\"ThreadParticipants\", fields: [userId], references: [id])\n  role     ParticipantRole @default(USER)\n  joinedAt DateTime        @default(now())\n\n  @@unique([threadId, userId])\n}\n\nenum ParticipantRole {\n  USER\n  VENDOR\n  ADMIN\n}\n\nmodel Message {\n  id        String        @id @default(cuid())\n  threadId  String\n  thread    MessageThread @relation(fields: [threadId], references: [id], onDelete: Cascade)\n  senderId  BigInt        @db.BigInt\n  sender    User          @relation(\"UserMessages\", fields: [senderId], references: [id])\n  content   String        @db.Text\n  isRead    Boolean       @default(false)\n  readAt    DateTime?\n  createdAt DateTime      @default(now())\n  updatedAt DateTime      @updatedAt\n\n  attachments MessageAttachment[]\n}\n\nmodel MessageAttachment {\n  id           String   @id @default(cuid())\n  messageId    String?\n  message      Message? @relation(fields: [messageId], references: [id], onDelete: Cascade)\n  filename     String\n  originalName String\n  url          String\n  size         Int\n  mimeType     String\n  uploadedById BigInt   @db.BigInt\n  uploadedBy   User     @relation(\"UploadedAttachments\", fields: [uploadedById], references: [id])\n  createdAt    DateTime @default(now())\n}\n\nmodel Notification {\n  id        BigInt           @id @default(autoincrement()) @db.BigInt\n  user      User             @relation(fields: [userId], references: [id])\n  userId    BigInt           @db.BigInt\n  type      NotificationType\n  title     String\n  body      String\n  payload   Json?\n  createdAt DateTime         @default(now())\n  readAt    DateTime?\n}\n\nenum NotificationType {\n  ORDER\n  AUCTION\n  MESSAGE\n  SYSTEM\n}\n\nmodel WatchlistItem {\n  id        BigInt   @id @default(autoincrement()) @db.BigInt\n  client    Client   @relation(fields: [clientId], references: [id])\n  clientId  BigInt   @db.BigInt\n  product   Product  @relation(fields: [productId], references: [id])\n  productId BigInt   @db.BigInt\n  createdAt DateTime @default(now())\n\n  @@unique([clientId, productId])\n}\n\nmodel Review {\n  id        BigInt       @id @default(autoincrement()) @db.BigInt\n  product   Product      @relation(fields: [productId], references: [id])\n  productId BigInt       @db.BigInt\n  client    Client       @relation(fields: [clientId], references: [id])\n  clientId  BigInt       @db.BigInt\n  rating    Int\n  body      String\n  photos    Json?\n  verified  Boolean      @default(false)\n  status    ReviewStatus @default(PENDING)\n  createdAt DateTime     @default(now())\n}\n\nenum ReviewStatus {\n  PENDING\n  APPROVED\n  REJECTED\n}\n\nmodel AbuseReport {\n  id         BigInt      @id @default(autoincrement()) @db.BigInt\n  reporter   User        @relation(name: \"Reporter\", fields: [reporterId], references: [id])\n  reporterId BigInt      @db.BigInt\n  targetType String\n  targetId   BigInt\n  reason     String\n  details    String?\n  status     AbuseStatus @default(OPEN)\n  createdAt  DateTime    @default(now())\n}\n\nenum AbuseStatus {\n  OPEN\n  REVIEWING\n  RESOLVED\n  REJECTED\n}\n\nmodel AuditLog {\n  id        BigInt   @id @default(autoincrement()) @db.BigInt\n  actor     User     @relation(name: \"Actor\", fields: [actorId], references: [id])\n  actorId   BigInt   @db.BigInt\n  action    String // Action type (e.g., \"USER_CREATED\", \"PRODUCT_UPDATED\")\n  entity    String // Entity type (e.g., \"User\", \"Product\")\n  entityId  BigInt // ID of the affected entity\n  ipAddress String?  @db.VarChar(45) // IPv4 or IPv6\n  userAgent String?  @db.Text\n  metadata  Json? // Additional context\n  diff      Json? // Before/after changes\n  vendor    Vendor?  @relation(name: \"VendorAudit\", fields: [vendorId], references: [id])\n  vendorId  BigInt?\n  createdAt DateTime @default(now())\n\n  @@index([actorId])\n  @@index([action])\n  @@index([entity])\n  @@index([ipAddress])\n  @@index([createdAt])\n}\n\nmodel PlatformSettings {\n  id        BigInt   @id @default(autoincrement()) @db.BigInt\n  key       String   @unique\n  value     Json\n  category  String // e.g., \"auction\", \"user\", \"payment\", \"general\"\n  updatedBy BigInt   @db.BigInt\n  updatedAt DateTime @updatedAt\n  createdAt DateTime @default(now())\n\n  @@index([category])\n}\n\nmodel ArchiveFile {\n  id        BigInt        @id @default(autoincrement()) @db.BigInt\n  owner     User          @relation(fields: [ownerId], references: [id])\n  ownerId   BigInt        @db.BigInt\n  fileName  String\n  fileType  String\n  size      Int\n  path      String\n  status    ArchiveStatus @default(ACTIVE)\n  createdAt DateTime      @default(now())\n}\n\nenum ArchiveStatus {\n  ACTIVE\n  ARCHIVED\n  DELETED\n}\n\nmodel Banner {\n  id      BigInt @id @default(autoincrement()) @db.BigInt\n  slot    String\n  content Json\n}\n\nmodel SavedSearch {\n  id        BigInt   @id @default(autoincrement()) @db.BigInt\n  client    Client   @relation(fields: [clientId], references: [id])\n  clientId  BigInt   @db.BigInt\n  query     Json\n  createdAt DateTime @default(now())\n}\n\nmodel VendorSettings {\n  id                   BigInt   @id @default(autoincrement()) @db.BigInt\n  vendor               Vendor   @relation(fields: [vendorId], references: [id])\n  vendorId             BigInt   @unique @db.BigInt\n  storeSettings        Json?\n  accountSettings      Json?\n  notificationSettings Json?\n  securitySettings     Json?\n  createdAt            DateTime @default(now())\n  updatedAt            DateTime @updatedAt\n}\n\nmodel AuctionActivity {\n  id           BigInt   @id @default(autoincrement()) @db.BigInt\n  auction      Auction  @relation(fields: [auctionId], references: [id], onDelete: Cascade)\n  auctionId    BigInt   @db.BigInt\n  activityType String   @db.VarChar(50)\n  userId       BigInt   @db.BigInt\n  metadata     Json?\n  createdAt    DateTime @default(now())\n\n  @@index([auctionId])\n  @@index([userId])\n}\n\nmodel AuctionView {\n  id        BigInt   @id @default(autoincrement()) @db.BigInt\n  auction   Auction  @relation(fields: [auctionId], references: [id], onDelete: Cascade)\n  auctionId BigInt   @db.BigInt\n  userId    BigInt?  @db.BigInt\n  ipAddress String?  @db.VarChar(45)\n  createdAt DateTime @default(now())\n\n  @@index([auctionId])\n  @@index([userId])\n}\n\nmodel AuctionWatcher {\n  id        BigInt   @id @default(autoincrement()) @db.BigInt\n  auction   Auction  @relation(fields: [auctionId], references: [id], onDelete: Cascade)\n  auctionId BigInt   @db.BigInt\n  user      User     @relation(\"WatchedAuctions\", fields: [userId], references: [id], onDelete: Cascade)\n  userId    BigInt   @db.BigInt\n  createdAt DateTime @default(now())\n\n  @@unique([auctionId, userId])\n  @@index([auctionId])\n  @@index([userId])\n}\n\nmodel ProductImage {\n  id        BigInt   @id @default(autoincrement()) @db.BigInt\n  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)\n  productId BigInt   @db.BigInt\n  url       String   @db.VarChar(512)\n  altText   String?  @db.VarChar(255)\n  order     Int      @default(0)\n  createdAt DateTime @default(now())\n\n  @@index([productId])\n}\n",
  "inlineSchemaHash": "af5bd5b984f4d617c6341a897c2cb9462db090f9425fb7c16d454e3dd371dd0a",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locale\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"roles\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToUser\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Vendor\",\"relationName\":\"UserToVendor\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"UserMessages\"},{\"name\":\"threadParticipants\",\"kind\":\"object\",\"type\":\"MessageThreadParticipant\",\"relationName\":\"ThreadParticipants\"},{\"name\":\"uploadedAttachments\",\"kind\":\"object\",\"type\":\"MessageAttachment\",\"relationName\":\"UploadedAttachments\"},{\"name\":\"abuseReports\",\"kind\":\"object\",\"type\":\"AbuseReport\",\"relationName\":\"Reporter\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"Actor\"},{\"name\":\"archiveFiles\",\"kind\":\"object\",\"type\":\"ArchiveFile\",\"relationName\":\"ArchiveFileToUser\"},{\"name\":\"watchedAuctions\",\"kind\":\"object\",\"type\":\"AuctionWatcher\",\"relationName\":\"WatchedAuctions\"}],\"dbName\":null},\"Client\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClientToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ClientToReview\"},{\"name\":\"watchlist\",\"kind\":\"object\",\"type\":\"WatchlistItem\",\"relationName\":\"ClientToWatchlistItem\"},{\"name\":\"savedSearch\",\"kind\":\"object\",\"type\":\"SavedSearch\",\"relationName\":\"ClientToSavedSearch\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"ClientToOrder\"},{\"name\":\"bids\",\"kind\":\"object\",\"type\":\"Bid\",\"relationName\":\"BidToClient\"},{\"name\":\"orderRequests\",\"kind\":\"object\",\"type\":\"OrderRequest\",\"relationName\":\"ClientToOrderRequest\"},{\"name\":\"wonAuctions\",\"kind\":\"object\",\"type\":\"Auction\",\"relationName\":\"AuctionWinner\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToClient\"}],\"dbName\":null},\"Vendor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVendor\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"businessName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"taxId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessRegNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankAccountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankRoutingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankAccountHolderName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"VendorStatus\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"rejectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectedBy\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rejectionCategory\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"suspendedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"suspensionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reinstatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reinstatedBy\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"documents\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"documentsComplete\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"yearsInBusiness\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedMonthlyVolume\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productCategories\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"tier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"stores\",\"kind\":\"object\",\"type\":\"Store\",\"relationName\":\"StoreToVendor\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"VendorAudit\"},{\"name\":\"messageThreads\",\"kind\":\"object\",\"type\":\"MessageThread\",\"relationName\":\"MessageThreadToVendor\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"VendorSettings\",\"relationName\":\"VendorToVendorSettings\"}],\"dbName\":null},\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"}],\"dbName\":null},\"Store\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"Vendor\",\"relationName\":\"StoreToVendor\"},{\"name\":\"sellerId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"socials\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"seo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banner\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"StoreStatus\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"rejectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"suspendedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToStore\"},{\"name\":\"auctions\",\"kind\":\"object\",\"type\":\"Auction\",\"relationName\":\"AuctionToStore\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToStore\"},{\"name\":\"orderRequests\",\"kind\":\"object\",\"type\":\"OrderRequest\",\"relationName\":\"OrderRequestToStore\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Store\",\"relationName\":\"ProductToStore\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"condition\",\"kind\":\"enum\",\"type\":\"ProductCondition\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProductStatus\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"compareAtPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"barcode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"seoData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"variants\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"inventory\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"auctions\",\"kind\":\"object\",\"type\":\"Auction\",\"relationName\":\"AuctionToProduct\"},{\"name\":\"offers\",\"kind\":\"object\",\"type\":\"Offer\",\"relationName\":\"OfferToProduct\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ProductToReview\"},{\"name\":\"watchlistItems\",\"kind\":\"object\",\"type\":\"WatchlistItem\",\"relationName\":\"ProductToWatchlistItem\"},{\"name\":\"messageThreads\",\"kind\":\"object\",\"type\":\"MessageThread\",\"relationName\":\"MessageThreadToProduct\"},{\"name\":\"productImages\",\"kind\":\"object\",\"type\":\"ProductImage\",\"relationName\":\"ProductToProductImage\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToProduct\"}],\"dbName\":null},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"CartItemToClient\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CartItemToProduct\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"offer\",\"kind\":\"object\",\"type\":\"Offer\",\"relationName\":\"CartItemToOffer\"},{\"name\":\"offerId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Auction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"AuctionToProduct\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Store\",\"relationName\":\"AuctionToStore\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minIncrement\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currentBid\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"startPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"reservePrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"reserveMet\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"buyNowPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"startAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"autoExtend\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"extendMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"extensionCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastExtendedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"watchers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AuctionStatus\"},{\"name\":\"winnerId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"winner\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"AuctionWinner\"},{\"name\":\"winningBidId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bids\",\"kind\":\"object\",\"type\":\"Bid\",\"relationName\":\"AuctionToBid\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"AuctionActivity\",\"relationName\":\"AuctionToAuctionActivity\"},{\"name\":\"auctionViews\",\"kind\":\"object\",\"type\":\"AuctionView\",\"relationName\":\"AuctionToAuctionView\"},{\"name\":\"auctionWatchers\",\"kind\":\"object\",\"type\":\"AuctionWatcher\",\"relationName\":\"AuctionToAuctionWatcher\"}],\"dbName\":null},\"Bid\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"auction\",\"kind\":\"object\",\"type\":\"Auction\",\"relationName\":\"AuctionToBid\"},{\"name\":\"auctionId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"BidToClient\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"maxAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isAuto\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isProxyBid\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"proxyGeneratedBy\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"BidStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Offer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OfferToProduct\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"promoPct\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToOffer\"}],\"dbName\":null},\"OrderRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToOrderRequest\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Store\",\"relationName\":\"OrderRequestToStore\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"source\",\"kind\":\"enum\",\"type\":\"OrderSource\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderRequestStatus\"},{\"name\":\"expressAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToOrder\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Store\",\"relationName\":\"OrderToStore\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"fulfillStatus\",\"kind\":\"enum\",\"type\":\"FulfillStatus\"},{\"name\":\"shipping\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"timeline\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"messageThreads\",\"kind\":\"object\",\"type\":\"MessageThread\",\"relationName\":\"MessageThreadToOrder\"}],\"dbName\":null},\"MessageThread\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ThreadType\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ThreadStatus\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"ThreadPriority\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"ThreadCategory\"},{\"name\":\"lastMessageAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Vendor\",\"relationName\":\"MessageThreadToVendor\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"MessageThreadToProduct\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"MessageThreadToOrder\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToMessageThread\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"MessageThreadParticipant\",\"relationName\":\"MessageThreadToMessageThreadParticipant\"}],\"dbName\":null},\"MessageThreadParticipant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"threadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thread\",\"kind\":\"object\",\"type\":\"MessageThread\",\"relationName\":\"MessageThreadToMessageThreadParticipant\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ThreadParticipants\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"ParticipantRole\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"threadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thread\",\"kind\":\"object\",\"type\":\"MessageThread\",\"relationName\":\"MessageToMessageThread\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserMessages\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attachments\",\"kind\":\"object\",\"type\":\"MessageAttachment\",\"relationName\":\"MessageToMessageAttachment\"}],\"dbName\":null},\"MessageAttachment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToMessageAttachment\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"originalName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadedById\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"uploadedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UploadedAttachments\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"WatchlistItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToWatchlistItem\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToWatchlistItem\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToReview\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToReview\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photos\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReviewStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AbuseReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"reporter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Reporter\"},{\"name\":\"reporterId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"targetType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AbuseStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"actor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Actor\"},{\"name\":\"actorId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"diff\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Vendor\",\"relationName\":\"VendorAudit\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PlatformSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ArchiveFile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ArchiveFileToUser\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ArchiveStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Banner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"slot\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"SavedSearch\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToSavedSearch\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"query\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"VendorSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Vendor\",\"relationName\":\"VendorToVendorSettings\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"storeSettings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"accountSettings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"notificationSettings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"securitySettings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AuctionActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"auction\",\"kind\":\"object\",\"type\":\"Auction\",\"relationName\":\"AuctionToAuctionActivity\"},{\"name\":\"auctionId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"activityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AuctionView\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"auction\",\"kind\":\"object\",\"type\":\"Auction\",\"relationName\":\"AuctionToAuctionView\"},{\"name\":\"auctionId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AuctionWatcher\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"auction\",\"kind\":\"object\",\"type\":\"Auction\",\"relationName\":\"AuctionToAuctionWatcher\"},{\"name\":\"auctionId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"WatchedAuctions\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ProductImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductImage\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"altText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

